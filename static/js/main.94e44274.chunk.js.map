{"version":3,"sources":["weatherCard.js","App.js","index.js"],"names":["WeatherCard","tempInfo","useState","weatherState","setweatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleDateString","toLocaleTimeString","App","SearchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","id","value","onChange","e","target","placeholder","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAwFeA,EAtFK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAGIC,EAQAJ,EARAI,KACAC,EAOAL,EAPAK,SACAC,EAMAN,EANAM,SACAC,EAKAP,EALAO,YACAC,EAIAR,EAJAQ,KACAC,EAGAT,EAHAS,MACAC,EAEAV,EAFAU,QACAC,EACAX,EADAW,OAGJC,qBAAU,WACN,GAAIL,EACA,OAAQA,GACJ,IAAK,SACDJ,EAAgB,iBAChB,MACJ,IAAK,OACDA,EAAgB,uBAChB,MACJ,IAAK,QACDA,EAAgB,sBAChB,MACJ,IAAK,OACDA,EAAgB,cAChB,MACA,IAAK,OACLA,EAAgB,2BAChB,MAEJ,QAASA,EAAgB,mBAIlC,CAACI,IAEJ,IACIM,EAAO,IAAIC,KAAW,IADhBH,GAENI,EAAO,UAAMF,EAAKG,WAAX,YAAyBH,EAAKI,cACzC,OACI,qCACI,qBAAKC,UAAU,eAAf,SACI,mBAAGA,UAAS,UAAKhB,OAGrB,qBAAKgB,UAAU,oBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,iCAAOd,EAAP,UADJ,IAC8BG,EAC1B,uBACA,iCAAOC,EAAP,IAAcE,QAElB,sBAAKQ,UAAU,aAAf,UACI,kCAAO,IAAIJ,MAAOK,qBAAlB,OAA+C,uBAC/C,gCAAO,IAAIL,MAAOM,+BAM9B,sBAAKF,UAAU,qBAAf,UACI,sBAAKA,UAAU,SAAf,UACI,mBAAGA,UAAU,iBAAmB,uBAC/BH,EAFL,IAEc,uBAFd,YAKA,sBAAKG,UAAU,WAAf,UACI,mBAAGA,UAAU,eAAiB,uBAC7Bb,EAFL,IAEe,uBAFf,cAIA,sBAAKa,UAAU,WAAf,UACI,mBAAGA,UAAU,4BAA8B,uBAC1CZ,EAFL,IAEe,uBAFf,cAIA,sBAAKY,UAAU,QAAf,UACI,mBAAGA,UAAU,gBAAkB,uBAC9BT,EAFL,IAEY,uBAFZ,iBChBDY,EA1DH,WACV,MAAsCpB,mBAAS,aAA/C,mBAAOqB,EAAP,KAAoBC,EAApB,KACA,EAAgCtB,mBAAS,IAAzC,mBAAOD,EAAP,KAAiBwB,EAAjB,KAEMC,EAAc,uCAAG,oDAAAC,EAAA,sEAEfC,EAFe,2DAE2CL,EAF3C,iEAGHM,MAAMD,GAHH,cAGfE,EAHe,gBAIFA,EAAIC,OAJF,OAIfC,EAJe,SAMkBA,EAAKC,KAAlC5B,EANW,EAMXA,KAAMC,EANK,EAMLA,SAAUC,EANL,EAMKA,SACVC,EAAgBwB,EAAKE,QAAQ,GAAnCD,KACAxB,EAASuB,EAATvB,KACAC,EAAUsB,EAAKG,KAAfzB,MATW,EAUSsB,EAAKI,IAAzBzB,EAVW,EAUXA,QAASC,EAVE,EAUFA,OAYjBa,EAVyB,CACvBpB,OACAC,WACAC,WACAC,cACAC,OACAC,QACAC,UACAC,WApBiB,kDAyBnByB,QAAQC,IAAR,MAzBmB,0DAAH,qDAmCpB,OALAzB,qBAAU,WACRa,MACC,IAID,mCACE,sBAAKP,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UACE,uBAAOoB,KAAK,SAAS9B,KAAK,SAAS+B,GAAG,aACpCC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAemB,EAAEC,OAAOH,QACzCI,YAAY,0BAEd,wBAAQ1B,UAAU,gBAAgB2B,QAASpB,EAA3C,uBAGF,cAAE,EAAF,CAAczB,SAAUA,UCnDhC8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.94e44274.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherCard = ({ tempInfo }) => {\r\n    const [weatherState, setweatherState] = useState(\"\");\r\n\r\n    const {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset\r\n    } = tempInfo;\r\n\r\n    useEffect(() => {\r\n        if (weathermood) {\r\n            switch (weathermood) {\r\n                case \"Clouds\":\r\n                    setweatherState(\"bi-cloud-fill\");\r\n                    break;\r\n                case \"Haze\":\r\n                    setweatherState(\"bi-cloud-haze2-fill\");\r\n                    break;\r\n                case \"Clear\":\r\n                    setweatherState(\"bi-brightness-high\");\r\n                    break;\r\n                case \"Mist\":\r\n                    setweatherState(\"fas fa-sun\");\r\n                    break;\r\n                    case \"Rain\":\r\n                    setweatherState(\"bi-cloud-lightning-rain\");\r\n                    break;\r\n\r\n                default: setweatherState(\"fas fa-Sunny\");\r\n                    break;\r\n            }\r\n        }\r\n    }, [weathermood])\r\n\r\n    var sec = sunset;\r\n    var date = new Date(sec * 1000);\r\n    var timeStr = `${date.getHours()}:${date.getMinutes()}`\r\n    return (\r\n        <>\r\n            <div className=\"weather-icon\">\r\n                <i className={`${weatherState}`}></i>\r\n            </div>\r\n\r\n            <div className=\"weather-main-info\">\r\n                <div className=\"temp\">\r\n                    <div className=\"today-date\">\r\n                        <span>{temp}&deg;</span>,{weathermood}\r\n                        <br />\r\n                        <span>{name},{country}</span>\r\n                    </div>\r\n                    <div className=\"today-time\">\r\n                        <span>{new Date().toLocaleDateString()},</span><br/>\r\n                        <span>{new Date().toLocaleTimeString()}</span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"weather-extra-info\">\r\n                <div className=\"sunset\">\r\n                    <i className=\"bi bi-sunset\"></i><br />\r\n                    {timeStr},<br />Sunset\r\n\r\n                </div>\r\n                <div className=\"humidity\">\r\n                    <i className=\"fas fa-sun\"></i><br />\r\n                    {humidity},<br />Humidity\r\n                </div>\r\n                <div className=\"pressure\">\r\n                    <i className=\"bi-cloud-lightning-rain\"></i><br />\r\n                    {pressure},<br />Pressure\r\n                </div>\r\n                <div className=\"speed\">\r\n                    <i className=\"fas fa-wind\"></i><br />\r\n                    {speed},<br />Wind\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherCard\r\n","\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\nimport WeatherCard from './weatherCard';\n\nconst App = () => {\n  const [SearchValue, setSearchValue] = useState(\"dharchula\");\n  const [tempInfo, setTempInfo] = useState({});\n\n  const getWeatherInfo = async () => {\n    try {\n      let url = `http://api.openweathermap.org/data/2.5/weather?q=${SearchValue}&units=metric&appid=9ef32ed6afbf91e7c42025f244944d14`\n      let res = await fetch(url);\n      let data = await res.json();\n\n      const { temp, humidity, pressure } = data.main;\n      const { main: weathermood } = data.weather[0];\n      const { name } = data;\n      const { speed } = data.wind;\n      const { country, sunset } = data.sys;\n\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo);\n      // console.log(data.main.temp);\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, [])\n\n\n  return (\n    <>\n      <div className=\"main-body\">\n        <div className=\"search\">\n          <input type=\"search\" name=\"search\" id=\"searchArea\"\n            value={SearchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n            placeholder=\"Please Enter The City\"\n          />\n          <button className=\"search-button\" onClick={getWeatherInfo}>Search</button>\n        </div>\n\n        < WeatherCard tempInfo={tempInfo}/>\n      </div>\n\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}